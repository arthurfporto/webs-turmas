name: Auto Merge PR

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Check modified files and validate format
        id: check_pr
        run: |
          # Fetch base branch for comparison
          git fetch origin ${{ github.base_ref }}
          
          # Check if only 2025webi.md was modified
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}..HEAD)
          
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Check if 2025webi.md is the only file changed
          if [ "$(echo "$CHANGED_FILES" | wc -l)" -eq "1" ] && [ "$(echo "$CHANGED_FILES" | grep "^2025webi.md$")" ]; then
            echo "only_2025webi=true" >> $GITHUB_OUTPUT
            
            # Get the diff content for 2025webi.md
            git diff origin/${{ github.base_ref }} -- 2025webi.md > diff.txt
            
            # Check for added lines with the correct format
            ADDED_LINES=$(grep -E '^\+' diff.txt | grep -v '^\+\+\+' || echo "")
            
            # Regular expression for the format: - [Nome](https://github.com/username)
            FORMAT_REGEX='^\+- \[.+\]\(https:\/\/github\.com\/[A-Za-z0-9_-]+\)'
            
            # Check if any added line matches the required format
            if echo "$ADDED_LINES" | grep -E "$FORMAT_REGEX" > /dev/null; then
              echo "valid_format=true" >> $GITHUB_OUTPUT
            else
              echo "valid_format=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "only_2025webi=false" >> $GITHUB_OUTPUT
          fi

      # Process PR using GitHub API
      - name: Process Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_GITHUB }}
          script: |
            const only2025webi = '${{ steps.check_pr.outputs.only_2025webi }}' === 'true';
            const validFormat = '${{ steps.check_pr.outputs.valid_format }}' === 'true';
            
            console.log(`Only 2025webi.md modified: ${only2025webi}`);
            console.log(`Valid format: ${validFormat}`);
            
            // Determinar a ação com base nas verificações
            if (only2025webi && validFormat) {
              // Aprovar e fazer merge do PR
              console.log("Approving and merging PR");
              try {
                await github.rest.pulls.createReview({
                  pull_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  event: 'APPROVE'
                });
                
                await github.rest.pulls.merge({
                  pull_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  merge_method: 'merge'
                });
                
                console.log("PR approved and merged successfully");
              } catch (error) {
                console.error("Error approving/merging PR:", error.message);
              }
            } else if (only2025webi && !validFormat) {
              // Comentar sobre formato inválido
              console.log("Adding comment about invalid format");
              try {
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: 'O formato da entrada adicionada não segue o padrão requerido. Por favor, siga o formato: "- [Nome da Pessoa](https://github.com/username)"'
                });
                console.log("Comment added successfully");
              } catch (error) {
                console.error("Error adding comment:", error.message);
              }
            } else {
              // Comentar sobre outros arquivos modificados
              console.log("Adding comment about other files modified");
              try {
                await github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: 'Este PR modificou outros arquivos além do 2025webi.md. O auto-merge só é permitido quando apenas o arquivo 2025webi.md é modificado.'
                });
                console.log("Comment added successfully");
              } catch (error) {
                console.error("Error adding comment:", error.message);
              }
            }